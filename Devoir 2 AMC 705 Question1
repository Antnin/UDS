%% Question 1
%% Déclaration variables

Nb = 2 ;
c = 0.33 ;
R = 5.64 ;
O = 383 ;
Pmcp = 319*10^3 ;
Ew = 989 ;
Mtow = 1669 ; 

Kp = 1.15 ;
f = 1.1 ;
Kpp = 1.05 ; 
ff = 1.3

g = 9.81 ; 
Cd0 = 0.008 ; 
rho = 1.225; 
rhoa = 1.225;
K = 4.65;
 

Sigma = (Nb*c)/(pi*R);
T = Mtow*g;
A = pi*R^2;
omega = O*pi/30;
Ct = T/(rho*A*omega^2*R^2);
performancehelico(rhoa, A, omega, R, f, Sigma, rho, Kp, Cd0, T, Ct, K)

function [Puissance_moteur, Puissance_disponible, Puissance_parasite_fuselage, Puissance_induite, Puissance_parasite_p, kts, Puissance_dispo_alt, P_tot_requise, P_exec] = performancehelico(rhoa,A, omega,R,f,Sigma,rho,Kp,Cd0, T,Ct, K)
    % Initialisation des listes
    Puissance_moteur = [];
    Puissance_disponible = [];
    Puissance_parasite_fuselage = [];
    Puissance_induite = [];
    Puissance_parasite_p = [];
    kts = [];
    P_pertes = [];
    P_tot_requise = [];

    % Variation de la vitesse

    for vitesse = 1:140
        kts = [kts, vitesse];
        lambda = 0.1;
        l = 1*10^-5;
        D = 1/2*rho*(vitesse*0.514444)^2*f ;
        W = T ; % approximation des petits angles theta << 1
        alpha = atan(D/W);
        mu = ((vitesse*0.514444)*cos(alpha)/(omega*R));
        while (lambda - l) > 1*10^-5
            lambda = mu*tan(alpha) + Ct/(2*sqrt(mu^2 + l^2));
            l = l + 1*10^-5;
        end

        % Puissance disponible

        Cp_MR = Kp*((Ct^2)/(2*sqrt(mu^2 + lambda^2))) + Sigma*Cd0/8 * (1+K*mu^2) + 1/2 * (f/A)*mu^3;
        Puissance_moteur = [Puissance_moteur, Cp_MR*rhoa*A*(omega^3)*(R^3)/745.7];

        % Puissance parasite du fuselage

        Cp_f = 1/2 * (f/A)*mu^3;
        Puissance_parasite_fuselage = [Puissance_parasite_fuselage, Cp_f*rhoa*A*(omega^3)*(R^3)/745.7];
       
        % Puissance induite du fuselage

        Cp_i = Kp*((Ct^2)/(2*sqrt(mu^2 + lambda^2)));
        Puissance_induite = [Puissance_induite, Cp_i*rhoa*A*(omega^3)*(R^3)/745.7];
       
        % Puissance parasite de pale

        Cp_p = Sigma*Cd0/8 * (1+K*mu^2);
        Puissance_parasite_p = [Puissance_parasite_p, Cp_p*rhoa*A*(omega^3)*(R^3)/745.7];

        % Pertes associées au rotor de queue
        % Puissance du rotor de queue PTR = 0.15 PMR
        % Puissance totale 

        P_tot_requise = [P_tot_requise, (Cp_MR*rhoa*A*(omega^3)*(R^3)/745.7)*100/85];
       
        % Puissance maximale disponible en continue

        Puissance_disponible = [Puissance_disponible, 428 * 1]; 
    end

    % Plot des courbes

    plot(kts, Puissance_moteur, 'LineWidth', 2, 'DisplayName', 'Puissance disponible au moteur');
    hold on;
    plot(kts, Puissance_parasite_fuselage, 'LineWidth', 2,'DisplayName', 'Contribution trainée de fuselage');
    plot(kts, Puissance_induite, 'LineWidth', 2,'DisplayName', 'Contribution Puissance Induite');
    plot(kts, Puissance_parasite_p, 'LineWidth', 2, 'DisplayName', 'Contribution de la traînée parasite des pales');
    plot(kts, Puissance_disponible, 'LineWidth', 2, 'DisplayName', 'Puissance maximale disponible en continue');
    plot(kts, P_tot_requise, 'LineWidth', 2, 'DisplayName', 'Puissance totale requise');
   
    % Graphique

    title('Puissances et contribution en fonction de la vitesse au sol à MTOW');
    legend('Location', 'northwest','FontSize', 10);
    xlabel('Vitesse (kts)');
    ylabel('Puissance (hp)');

    % Affichage

    hold off;
    grid on;
   
end
